(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{184:function(t,s,e){"use strict";e.r(s);var a=e(0),v=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"questions"}},[t._v("Questions")]),t._v(" "),e("h2",{attrs:{id:"mybatis"}},[t._v("Mybatis")]),t._v(" "),e("ul",[e("li",[t._v("preparedstatements?"),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 작성된 매퍼 구문(id = admin)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{id}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- dbms에서 받는 쿼리")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ?\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 실제 수행 쿼리")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("statement\n"),e("ul",[e("li",[t._v("statement는 단순히 문자열이 치환이 되기 때문에 파라미터로 사용하기 위해선 홑따움표를 적어줘야 한다.")]),t._v(" "),e("li",[t._v("sql injection이 될 수 있다.(password 체크하는 부분 주석처리될 수도 있음.)")])]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 작성된 매퍼 구문(id = admin'--, pwd = 1234)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'${id}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" PASSWORD "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'${password}'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- dbms에서 받는 쿼리")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'AND PASSWORD = '1234'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 실제 수행 쿼리")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),t._v("        \n")])])]),e("ul",[e("li",[t._v("컬럼명 바인딩할 때 사용.")])])]),t._v(" "),e("li",[t._v("설정")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"tcp-통신에서의-옵션"}},[t._v("tcp 통신에서의 옵션")]),t._v(" "),e("h3",{attrs:{id:"keep-alive"}},[t._v("keep alive")]),t._v(" "),e("ul",[e("li",[t._v("Http에서\n"),e("ul",[e("li",[t._v("Http는 특성상 커넥션을 유지하지 않는다. => keep alive를 설정하면 유지하게 됨.")]),t._v(" "),e("li",[t._v("서버는 한번에 연결을 맺을 수 있는 소켓을 생성하는 데 한계가 있다. 따라서 연결을 오래 유지하면 다른 사람들이 연결을 못하게 되는데, 사람들이 적게 접속한다면, 소수의 사람이 빠르게 인터넷을 사용할 수 있다.")]),t._v(" "),e("li",[t._v("Keep Alive란 연결된 socket에 IN/OUT의 access가 마지막으로 종료된 시점부터 정의된 시간까지 access가 없더라도 대기하는 구조입니다.\n즉 정의된 시간내에 access가 이루어진다면 계속 연결된 상태를 유지할 수 있다.")])])]),t._v(" "),e("li",[t._v("tcp에서\n"),e("ul",[e("li",[t._v("tcp_keepalive_interval 시간 내에 연결이 유휴상태가 되었을 때 keepalive 탐색패킷(payload 없는)을 보냄.")]),t._v(" "),e("li",[t._v("패킷에 반응이 없으면 접속을 끊는다.")]),t._v(" "),e("li",[t._v("주로 종단시스템중 하나가 다운될 때 발생할 수 있는 한쪽만 열린 연결 상태를 정리하는 것.")])])])]),t._v(" "),e("h3",{attrs:{id:"time-wait"}},[t._v("time wait")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"design-pattern"}},[t._v("Design Pattern")]),t._v(" "),e("h3",{attrs:{id:"singleton"}},[t._v("singleton")]),t._v(" "),e("ul",[e("li",[t._v("인스턴스가 두 개 이상 만들어지면 프로그램이 이상하게 돌아가는 경우..\n"),e("ul",[e("li",[t._v("예를 들어 스레드 풀, 캐시, 대화상자, 사용자설정, 레지스트리 설정 처리 객체, 로그 기록용 객체, 프린터나 그래픽카드 같은 디바이스를 위한 디바이스 드라이버.")])])])]),t._v(" "),e("h3",{attrs:{id:"template-method"}},[t._v("template method")]),t._v(" "),e("ul",[e("li",[t._v("메소드에서 알고리즘의 골격을 정의한다. 알고리즘의 여러 단계 중 일부는 서브클래스에서 구현할 수 있다. 템플릿 메소드를 이용하면 알고리즘의구조는 그대로 유지하면서 서브클래스에서 특정 단계를 재정의할 수 있다.")]),t._v(" "),e("li",[t._v("java에서 Sort Comparable 인터페이스\n"),e("ul",[e("li",[t._v("compareTo 메서드 하나만 있음.")]),t._v(" "),e("li",[t._v("서브클래스를 만드는 것이 아니라 compareTo 메서드를 구현해주면 sort를 사용할 수 있다.")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"객체지향-5원칙"}},[t._v("객체지향 5원칙")]),t._v(" "),e("ul",[e("li",[t._v("단일 책임의 원칙("),e("code",[t._v("S")]),t._v("ingle Responsibility Principle)")]),t._v(" "),e("li",[t._v("개방폐쇄의 원칙("),e("code",[t._v("O")]),t._v("pen Close Principle)")]),t._v(" "),e("li",[t._v("리스코브 치환의 원칙(The "),e("code",[t._v("L")]),t._v("isKov Substitution Principle)")]),t._v(" "),e("li",[t._v("인터페이스 분리의 원칙("),e("code",[t._v("I")]),t._v("nterface Segregation Principle)")]),t._v(" "),e("li",[t._v("의존성 역전의 원칙("),e("code",[t._v("D")]),t._v("ependency Inversion Principle)")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"기존-servlet-jsp-방식과-비교하여-vuejs의-장점"}},[t._v("기존 servlet - jsp 방식과 비교하여 vuejs의 장점?")]),t._v(" "),e("ul",[e("li",[t._v("a")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"web-보안"}},[t._v("WEB 보안")]),t._v(" "),e("h3",{attrs:{id:"csrf"}},[t._v("CSRF")]),t._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"정의"}},[t._v("정의?")]),t._v(" "),e("ul",[e("li",[t._v("특정 웹사이트가 사용자의 웹 브라우저를 신용하는 상태를 노린 것.")]),t._v(" "),e("li",[t._v("사용자가 웹사이트에 로그인한 상태에서 사이트간 요청 위조 공격 코드가 삽입된 페이지를 열면, 공격 대상이 되는 웹사이트는 위조된 공격 명령이 믿을 수 있는 사용자로부터 발송된 것으로 판단하게 되어 고역에 노출됨.")])])]),t._v(" "),e("li",[e("h4",{attrs:{id:"방어기법"}},[t._v("방어기법?")]),t._v(" "),e("blockquote",[e("p",[t._v("일반적으로 조회성 데이터(HTTP GET Method)는 대상에 두지 않는다."),e("br"),t._v("\n쓰기 / 변경이 가능한 POST, PATCH, DELETE Method에만 적용.")])]),t._v(" "),e("ul",[e("li",[t._v("Referrer 검증\n"),e("ul",[e("li",[t._v("Backend 단에서 request의 referrer를 확인하여 domain이 일치하는 지 검증하는 방법.")]),t._v(" "),e("li",[t._v("대부분의 CSRF 공격을 방어할 수 있지만 도메인 내의 페이지에 XSS 취약점이 있는 경우 CSRF 공격에 취약해질 수 있음. => 좀 더 세밀하게 페이지 단위까지 일치하는 지 검증을 하면 XSS 취약점에 의한 CSRF 공격을 방어할 수 있다.")])])]),t._v(" "),e("li",[t._v("Security Token 사용\n"),e("ul",[e("li",[t._v("Referrer 검증이 불가한 환경")]),t._v(" "),e("li",[t._v("사용자의 세션에 임의의 난수값을 저장하고 사용자의 요청 마다 해당 난수값을 포함시켜 전송.")]),t._v(" "),e("li",[t._v("Back단에서 요청을 받을 때마다 세션에 저장된 토큰 값과 요청 파라미터에 전달되는 토큰 값이 일치하는 지 검증.")]),t._v(" "),e("li",[t._v("같은 도메인 내에 XSS 취약점이 있다면 CSRF 공격에 취약해짐.")])])]),t._v(" "),e("li",[t._v("Double Submit Cookie 검증\n"),e("ul",[e("li",[t._v("세션을 사용할 수 없는 환경에서 사용.")]),t._v(" "),e("li",[t._v("웹 브라우저의 Same Origin 정책으로 인해 자바스크립트에서 타 도메인의 쿠키 값을 확인/ 수정하지 못한다는 것을 이용한 방어 기법.")]),t._v(" "),e("li",[t._v("난수 생성하여 쿠키에 저장하고 동일한 난수 값을 요청 파라미터에도 저장하여 서버로 전송.")])])])])])]),t._v(" "),e("h3",{attrs:{id:"xss"}},[t._v("XSS")]),t._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"정의-2"}},[t._v("정의?")]),t._v(" "),e("ul",[e("li",[t._v("Cross-site Scripting")]),t._v(" "),e("li",[t._v("악의적인 사용자가 공격하려는 사이트에 스크립트를 넣는 기법을 말한다.")]),t._v(" "),e("li",[t._v("공격에 성공하면 사이트에 접속한 사용자는 삽입된 코드르 실행하게 되며, 보통 의도치 않은 행동을 수행시키거나 쿠키나 세션 토큰 등의 민감한 정보를 탈취한다.")])])])]),t._v(" "),e("h3",{attrs:{id:"sql-injection"}},[t._v("SQL Injection")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"js-특징"}},[t._v("js 특징")]),t._v(" "),e("ul",[e("li",[t._v("1급객체")]),t._v(" "),e("li",[t._v("클로저 등\n"),e("ul",[e("li",[t._v("메모리 이슈?")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"db"}},[t._v("DB")]),t._v(" "),e("ul",[e("li",[t._v("innerjoin, outerjoin")]),t._v(" "),e("li",[t._v("index 사용했을 때, index 안타고 full scan 하는 경우?")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"jquery"}},[t._v("jquery")]),t._v(" "),e("ul",[e("li",[t._v("querySelector에서 "),e("code",[t._v("#")]),t._v("와 "),e("code",[t._v(".")]),t._v("의 차이")]),t._v(" "),e("li",[e("code",[t._v("#")]),t._v(" : id 찾을 때. 가장 첫번째 id값이 배열에 담겨 return 됨.")]),t._v(" "),e("li",[e("code",[t._v(".")]),t._v(" : class. 같은 이름을 가진 class가 모두 배열에 담겨 return 됨.")])])])}],!1,null,null,null);v.options.__file="181024_study.md";s.default=v.exports}}]);